{
	"name": "nyxtaxidatasave",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark32",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "224g",
			"driverCores": 32,
			"executorMemory": "224g",
			"executorCores": 32,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "74a8231a-0d36-4dff-8fb3-f4b882fb4a87"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/80ef7369-572a-4abd-b09a-033367f44858/resourceGroups/mlopsdeveast/providers/Microsoft.Synapse/workspaces/synpasedl/bigDataPools/spark32",
				"name": "spark32",
				"type": "Spark",
				"endpoint": "https://synpasedl.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark32",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 32,
				"memory": 224,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import matplotlib.pyplot as plt\r\n",
					"\r\n",
					"from pyspark.sql.functions import unix_timestamp\r\n",
					"\r\n",
					"from pyspark.sql import SparkSession\r\n",
					"from pyspark.sql.types import *\r\n",
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"from pyspark.ml import Pipeline\r\n",
					"from pyspark.ml import PipelineModel\r\n",
					"from pyspark.ml.feature import RFormula\r\n",
					"from pyspark.ml.feature import OneHotEncoder, StringIndexer, VectorIndexer\r\n",
					"from pyspark.ml.classification import LogisticRegression\r\n",
					"from pyspark.mllib.evaluation import BinaryClassificationMetrics\r\n",
					"from pyspark.ml.evaluation import BinaryClassificationEvaluator"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Import NYC yellow cab data from Azure Open Datasets\r\n",
					"from azureml.opendatasets import NycTlcYellow\r\n",
					"\r\n",
					"from datetime import datetime\r\n",
					"from dateutil import parser\r\n",
					"\r\n",
					"end_date = parser.parse('2018-12-31 00:00:00')\r\n",
					"start_date = parser.parse('2018-01-01 00:00:00')\r\n",
					"\r\n",
					"nyc_tlc = NycTlcYellow(start_date=start_date, end_date=end_date)\r\n",
					"nyc_tlc_df = nyc_tlc.to_spark_dataframe()"
				],
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"nyc_tlc_df.count()"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"nyc_tlc_df.repartition(5).write.mode(\"overwrite\").parquet('abfss://root@synpasedlstore.dfs.core.windows.net/yellowtaxi/')"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from azureml.opendatasets import NycTlcGreen\r\n",
					"\r\n",
					"from datetime import datetime\r\n",
					"from dateutil import parser\r\n",
					"end_date = parser.parse('2018-12-31')\r\n",
					"start_date = parser.parse('2018-01-01')\r\n",
					"\r\n",
					"nyc_tlc = NycTlcGreen(start_date=start_date, end_date=end_date)\r\n",
					"nyc_tlc_dfg = nyc_tlc.to_spark_dataframe()"
				],
				"execution_count": 26
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"nyc_tlc_dfg.count()"
				],
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"nyc_tlc_dfg.repartition(1).write.mode(\"overwrite\").parquet('abfss://root@synpasedlstore.dfs.core.windows.net/greentaxi/')"
				],
				"execution_count": 29
			}
		]
	}
}